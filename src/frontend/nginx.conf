# auto detects a good number of processes to run
worker_processes auto;

#Provides the configuration file context in which the directives that affect connection processing are specified.
events {
    # Sets the maximum number of simultaneous connections that can be opened by a worker process.
    worker_connections 8000;

    # Tells the worker to accept multiple connections at a time
    multi_accept on;
}

http {
    # don't send the nginx version number in error pages and Server header
    server_tokens off;

    # what times to include
    include /etc/nginx/mime.types;

    # what is the default one
    default_type  application/octet-stream;

    # Sets the path, format, and configuration for a buffered log write
    log_format compression '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $upstream_addr '
        '"$http_referer" "$http_user_agent"';

    server {
        # compress files
        gzip on;

        # listen on port 80
        listen 80;

        # save logs here
        access_log /var/log/nginx/access.log compression;

        # config to don't allow the browser to render the page inside an frame or iframe and avoid clickjacking http://en.wikipedia.org/wiki/Clickjacking
        add_header X-Frame-Options SAMEORIGIN;

        # when serving user-supplied content, include a X-Content-Type-Options: nosniff header along with the Content-Type: header, to disable content-type sniffing on some browsers.
        add_header X-Content-Type-Options nosniff;

        # This header enables the Cross-site scripting (XSS) filter built into most recent web browsers. It's usually enabled by default anyway, so the role of this header is to re-enable the filter for this particular website if it was disabled by the user.
        add_header X-XSS-Protection "1; mode=block";

        # Enable CORS from all websites
        add_header Access-Control-Allow-Origin *;

        # with Content Security Policy (CSP) enabled(and a browser that supports it(http://caniuse.com/#feat=contentsecuritypolicy),
        # https://www.cspisawesome.com/
        set $DEFAULT "default-src 'none'";
        set $SCRIPT "script-src 'self'";
        set $SCRIPT "${SCRIPT} 'unsafe-eval'";
        set $SCRIPT "${SCRIPT} 'unsafe-inline'";
        set $SCRIPT "${SCRIPT} https://*.userreport.com";
        set $SCRIPT "${SCRIPT} https://www.google.com";
        set $SCRIPT "${SCRIPT} https://www.googletagmanager.com";
        set $SCRIPT "${SCRIPT} https://www.gstatic.com";
        set $SCRIPT "${SCRIPT} https://cdn.jsdelivr.net";
        set $SCRIPT "${SCRIPT} https://www.google-analytics.com";
        set $SCRIPT "${SCRIPT} https://static.ads-twitter.com";
        set $SCRIPT "${SCRIPT} https://*.twitter.com";
        set $SCRIPT "${SCRIPT} https://t.co";
        set $STYLE "style-src 'self'";
        set $STYLE "${STYLE} 'unsafe-inline'";
        set $STYLE "${STYLE} https://cdn.jsdelivr.net";
        set $STYLE "${STYLE} https://fonts.googleapis.com";
        set $STYLE "${STYLE} https://sdsbucket.s3.amazonaws.com/fonts/segoerpb.css";
        set $STYLE "${STYLE} https://highlightjs.org/static/demo/styles/agate.css";
        set $IMG "img-src 'self'";
        set $IMG "${IMG} https://www.google-analytics.com";
        set $IMG "${IMG} https://dmp.adform.net";
        set $IMG "${IMG} https://*.userreport.com";
        set $IMG "${IMG} https://cm.g.doubleclick.net";
        set $IMG "${IMG} https://www.google.com";
        set $IMG "${IMG} https://www.t.co";
        set $IMG "${IMG} data:";
        set $FONT "font-src 'self'";
        set $FONT "${FONT} https://cdn.jsdelivr.net";
        set $FONT "${FONT} https://fonts.gstatic.com";
        set $FONT "${FONT} https://fonts.googleapis.com";
        set $CONNECT "connect-src 'self'";
        set $CONNECT "${CONNECT} https://api.chainlink.academy";
        set $CONNECT "${CONNECT} https://www.google-analytics.com";
        set $CONNECT "${CONNECT} https://www.googletagmanager.com";
        set $CONNECT "${CONNECT} https://*.userreport.com";
        set $CONNECT "${CONNECT} https://stats.g.doubleclick.net";
        set $FRAME "frame-src 'self'";
        set $FRAME "${FRAME} https://www.google.com";
        set $FRAME "${FRAME} https://www.googletagmanager.com";
        set $FRAME "${FRAME} https://*.userreport.com";
        set $OBJECT "object-src 'none'";
        set $MEDIA "media-src 'none'";
        set $MANIFEST "manifest-src 'self'";
        set $WORKER "worker-src 'self'";
        set $WORKER "${WORKER} data:";
        set $WORKER "${WORKER} https://www.google.com";
        add_header Content-Security-Policy "${DEFAULT}; ${SCRIPT}; ${STYLE}; ${IMG}; ${FONT}; ${CONNECT}; ${FRAME}; ${OBJECT}; ${MEDIA}; ${MANIFEST}; ${WORKER};";


        # only allow cloudflare's IPs
        # allow 173.245.48.0/20;
        # allow 103.21.244.0/22;
        # allow 103.22.200.0/22;
        # allow 103.31.4.0/22;
        # allow 141.101.64.0/18;
        # allow 108.162.192.0/18;
        # allow 190.93.240.0/20;
        # allow 188.114.96.0/20;
        # allow 197.234.240.0/22;
        # allow 198.41.128.0/17;
        # allow 162.158.0.0/15;
        # allow 104.16.0.0/12;
        # allow 172.64.0.0/13;
        # allow 131.0.72.0/22;
        # allow 2400:cb00::/32;
        # allow 2606:4700::/32;
        # allow 2803:f800::/32;
        # allow 2405:b500::/32;
        # allow 2405:8100::/32;
        # allow 2a06:98c0::/29;
        # allow 2c0f:f248::/32;
        # deny all;

        # where the root here
        root /var/www;

        # what file to server as index
        index index.html;

        location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to redirecting to index.html
            try_files $uri $uri/ /index.html;
        }

        # Media: images, icons, video, audio, HTC
        location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
          try_files $uri =404;
          expires 30d;
          access_log off;
          add_header Cache-Control "public";
        }

        # Javascript and CSS files
        location ~* \.(?:css|js)$ {
            try_files $uri =404;
            expires 1d;
            access_log off;
            add_header Cache-Control "public";
        }

        # Any route containing a file extension (e.g. /devicesfile.js)
        location ~ ^.+\..+$ {
            try_files $uri =404;
        }
    }
}
